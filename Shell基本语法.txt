1、变量
	变量是用来临时保存数据的，该数据是可以变化的数据。
	
	定义
	    变量名 = 变量值
	    
	变量名定义规则
	   a、严格区分大小写
	   b、变量名不能有特殊符号  特别说明 对于有空格的字符给变量赋值时，要用引号引起来
	   c、不能以数字开头
	   d、等号两边不能有任何空格
	  
       交互式定义变量
	   用户自己给变量赋值
           
	   语法
  		read [选项]  变量名

		-p	定义提示用户的信息
		-n	定义字符数
		-s	不显示
		-t  	定义超时时间，默认单位秒

	   变量来自于用户
	 	> read -p  "Enter your name:" name
		June
		> echo $name 
	   变量来自于文件
		> read -p "Input the hello.txt" content < hello.txt
		读取第一行
          
	定义有类型的变量
		declare 选项  变量名=变量值
         	
		-i	整数
		-r	只读变量
		-a	定义普通数组
		-A	定义关联数组
		-X      将变量通过环境导出   declare -x AAA=123456 等于 export AAA=123456

	本地变量
		当前用户自定义的变量，当前进程中有效，其他进程及当前进程的子进程无效
	
	环境变量
		当前进程有效，并且能够被子进程调用
		
		env	查看当前用户的环境变量
		set	查询当前用户的所有变量（临时变量与环境变量）
		export	变量名=变量值	或者   变量名=变量值; export 变量名
   	全局变量
		全局所有的用户和程序都能调用，且继承，新建用户也默认能调用
		
		用户登录系统读取相关文件的顺序
			1、/etc/profile
			2、$HOME/.bash_profile
			3、$HOME/.bashrc
			4、/etc/bashrc
			5、$HOME/.bash_logout
	系统变量
		内置bash中变量	shell本身已经固定它的名字和作用
		
		$?	上一条命令执行后返回的状态，状态值为0表示执行正常，非0表示执行异常或错误
		$0	当前执行的程序或脚本名
		$#	脚本后面接的参数个数
		$*	脚本后面所有参数，参数当成一个整体输出，没一个变量参数之间以空格隔开
		$@	脚本后面所有参数，参数是独立的，也是全部输出
		$1-$9	脚本后面的位置参数，$1表示第1个位置参数，依次类推
		${10}-$n 扩展位置参数，第10个位置变量必须用{}大括号括起来
		$$	当前所在进程的进程号，如echo $$
		$!	后台运行的最后一个进程号(当前终端)
		!$	调用最后一条命令历史中的参数
			
	
